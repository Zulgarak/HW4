[{"C:\\itest\\hw3\\client\\src\\index.js":"1","C:\\itest\\hw3\\client\\src\\App.js":"2","C:\\itest\\hw3\\client\\src\\reportWebVitals.js":"3","C:\\itest\\hw3\\client\\src\\routes.js":"4","C:\\itest\\hw3\\client\\src\\pages\\AuthPage.js":"5","C:\\itest\\hw3\\client\\src\\hooks\\http.hook.js":"6","C:\\itest\\hw3\\client\\src\\hooks\\message.hook.js":"7","C:\\itest\\hw3\\client\\src\\hooks\\auth.hook.js":"8","C:\\itest\\hw3\\client\\src\\context\\AuthContext.js":"9","C:\\itest\\hw3\\client\\src\\components\\Navbar.js":"10","C:\\itest\\hw3\\client\\src\\pages\\UsersPage.js":"11","C:\\itest\\hw3\\client\\src\\components\\UsersList.js":"12"},{"size":500,"mtime":1608410635903,"results":"13","hashOfConfig":"14"},{"size":735,"mtime":1608589286828,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608410635903,"results":"16","hashOfConfig":"14"},{"size":718,"mtime":1608717130788,"results":"17","hashOfConfig":"14"},{"size":2617,"mtime":1608720772357,"results":"18","hashOfConfig":"14"},{"size":929,"mtime":1608718052827,"results":"19","hashOfConfig":"14"},{"size":189,"mtime":1608577554280,"results":"20","hashOfConfig":"14"},{"size":805,"mtime":1608735035471,"results":"21","hashOfConfig":"14"},{"size":199,"mtime":1608588032905,"results":"22","hashOfConfig":"14"},{"size":738,"mtime":1608736022816,"results":"23","hashOfConfig":"14"},{"size":790,"mtime":1608681295607,"results":"24","hashOfConfig":"14"},{"size":7844,"mtime":1608750238000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"w3nzt0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\itest\\hw3\\client\\src\\index.js",[],["52","53"],"C:\\itest\\hw3\\client\\src\\App.js",[],"C:\\itest\\hw3\\client\\src\\reportWebVitals.js",[],"C:\\itest\\hw3\\client\\src\\routes.js",[],"C:\\itest\\hw3\\client\\src\\pages\\AuthPage.js",[],"C:\\itest\\hw3\\client\\src\\hooks\\http.hook.js",[],"C:\\itest\\hw3\\client\\src\\hooks\\message.hook.js",[],"C:\\itest\\hw3\\client\\src\\hooks\\auth.hook.js",[],"C:\\itest\\hw3\\client\\src\\context\\AuthContext.js",[],"C:\\itest\\hw3\\client\\src\\components\\Navbar.js",[],"C:\\itest\\hw3\\client\\src\\pages\\UsersPage.js",[],"C:\\itest\\hw3\\client\\src\\components\\UsersList.js",["54","55","56","57","58","59","60","61","62"],"import React, {useCallback, useState, useEffect, useContext} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n// import {Navbar} from \"./Navbar\";\r\n\r\nexport const UsersList = ({users}) => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  const [userPicked, setUserPicked] = useState([])\r\n  //array checked\r\n  const [isChecked, setIsChecked] = useState(false)\r\n  //for api users\r\n  const [isCheckedArray, setIsCheckedArray] = useState([])\r\n  console.log('isChecked',isChecked);\r\n  console.log('isCheckedArray',isCheckedArray);\r\n\r\n\r\n  const putHandler = async (e, a) => {\r\n    const action = a\r\n    const updateUser = isCheckedArray\r\n    // console.log(updateUser);\r\n    const length = updateUser.length\r\n    if (action ==='block') {\r\n\r\n      if (length === 0) {\r\n        return\r\n      }\r\n      if (length === 1) {\r\n        try {\r\n          const userBack = updateUser[0]\r\n          userBack.status = false\r\n          // console.log(userBack);\r\n          const data = await request('/api/users', 'PUT', {...userBack})\r\n\r\n          const bool = auth.userId === userBack._id\r\n          if (bool && !userBack.status) {\r\n            auth.logout()\r\n            return\r\n          }\r\n          // message(data.message)\r\n        } catch (e) {\r\n        }\r\n      }\r\n      if(length > 1) {\r\n        // console.log('>1')\r\n        const userBack = updateUser\r\n        let needLogout = false\r\n        userBack.map(\r\n          function (item, i) {\r\n          item.status = false\r\n\r\n\r\n          const bool = auth.userId === item._id\r\n          if (bool && !item.status) {\r\n            needLogout = true\r\n          }\r\n\r\n          return item\r\n          })\r\n        const data = await request('/api/users', 'PUT', {...userBack})\r\n        if (needLogout) {\r\n          auth.logout()\r\n        }\r\n\r\n      }\r\n    }\r\n    if (action ==='unblock') {\r\n      if (length === 0) {\r\n        return\r\n      }\r\n      if (length === 1) {\r\n        try {\r\n          const userBack = updateUser[0]\r\n          userBack.status = true\r\n          const data = await request('/api/users', 'PUT', {...userBack})\r\n\r\n          // message(data.message)\r\n        } catch (e) {\r\n        }\r\n      }\r\n      if(length > 1) {\r\n        const userBack = updateUser\r\n        userBack.map(\r\n          function (item, i) {\r\n            item.status = true\r\n            return item\r\n          })\r\n        const data = await request('/api/users', 'PUT', {...userBack})\r\n      }\r\n    }\r\n\r\n    if (action ==='delete') {\r\n      if (length === 0) {\r\n        return\r\n      }\r\n      if (length === 1) {\r\n        try {\r\n          const userBack = updateUser[0]\r\n          const data = await request('/api/users', 'DELETE', {...userBack})\r\n          const bool = auth.userId === userBack._id\r\n          if (bool) {\r\n            auth.logout()\r\n            return\r\n          }\r\n           history.push('/auth')\r\n        } catch (e) {\r\n        }\r\n      }\r\n      if(length > 1) {\r\n        const userBack = updateUser\r\n        // userBack.map(\r\n        //   function (item, i) {\r\n        //     item.status = true\r\n        //     return item\r\n        //   })\r\n        const data = await request('/api/users', 'DELETE', {...userBack})\r\n      }\r\n    }\r\n  }\r\n  // console.log(isChecked)\r\n\r\n  useEffect(() => {\r\n    setUserPicked(users)\r\n    //TEST isCheckedArray\r\n  });\r\n\r\n  useEffect(() => {\r\n    const x = new Array(users.length)\r\n    x.fill(false)\r\n    setIsChecked(x)\r\n\r\n  }, [users]);\r\n\r\n  const checkedHandler =(e) => {\r\n    const x = isChecked\r\n    x.fill(e.target.checked)\r\n    setIsChecked(x)\r\n    let f\r\n    let y\r\n    if (e.target.checked){\r\n      f = userPicked\r\n      y = [...f]\r\n      console.log(y);\r\n      setIsCheckedArray(y)\r\n    } else {\r\n      f = []\r\n      y = [...f]\r\n      console.log(y);\r\n      setIsCheckedArray(y)\r\n    }\r\n  }\r\n\r\n  const onItemHintClick = (index, e) => {\r\n    const value = e.target.value\r\n    const checked = e.target.checked\r\n    //for checked\r\n    const checkedArray = isChecked\r\n    checkedArray[index] = checked\r\n    setIsChecked(checkedArray)\r\n    //for checked\r\n\r\n\r\n    const filterUsers = userPicked\r\n    let f\r\n    let x\r\n    if (checked){\r\n      f = userPicked.filter((item)=> {return item._id === value})\r\n      x = [...isCheckedArray, ...f]\r\n      // console.log(x);\r\n      setIsCheckedArray(x)\r\n    } else {\r\n      f = isCheckedArray.filter((item)=> {return item._id !== value})\r\n      x = [...f]\r\n      // console.log(x);\r\n      setIsCheckedArray(x)\r\n    }\r\n  };\r\n\r\n\r\n  // const handleClick = (user) => {\r\n  //   console.log(user)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <div className=\"nav-wrapper cyan lighten-2\" style={{ padding: '0 2rem', marginTop: '1rem' }}>\r\n          <span className=\"brand-logo\">Tools</span>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down df\">\r\n            <li className=\"cursor-pointer\">\r\n              <i\r\n                className=\"material-icons\"\r\n                title=\"block\"\r\n                onClick={(e)=> {putHandler(e, 'block')}}\r\n              >block</i>\r\n            </li>\r\n            <li className=\"cursor-pointer\">\r\n              <i\r\n                className=\"material-icons\"\r\n                title=\"unblock\"\r\n                onClick={(e)=> {putHandler(e, 'unblock')}}\r\n              >add</i>\r\n            </li>\r\n            <li className=\"cursor-pointer\">\r\n              <i\r\n                className=\"material-icons\"\r\n                title=\"delete\"\r\n                onClick={(e)=> {putHandler(e, 'delete')}}\r\n              >delete</i>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <table>\r\n        <thead>\r\n        <tr>\r\n          <th>\r\n            <label className=\"df\">\r\n              <input type=\"checkbox\" className=\"filled-in\" onChange={(e)=> {checkedHandler(e)}} />\r\n              <span></span>\r\n            </label>\r\n          </th>\r\n          <th>№</th>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Date registration</th>\r\n          <th>Last login</th>\r\n          <th>Status</th>\r\n        </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        { users.map((user, index) => {\r\n\r\n          // const userTest1 = user\r\n          // setUserTest(user)\r\n          // console.log(user);\r\n          return (\r\n            <tr key={user._id}>\r\n              <td>\r\n                  <label className=\"df\">\r\n                    {/*<input type=\"checkbox\" onClick={()=> {handleClick(user)}}  className=\"filled-in\" />*/}\r\n                    {/*work!!!!!!!!!!!!!!*/}\r\n                    {/*<input type=\"checkbox\" onClick={()=> {putHandler(user)}}  className=\"filled-in\" />*/}\r\n                    {/*checked={isCheckedArray}*/}\r\n                    {/*<input checked={isCheckedArray[index]}  onChange={(e)=> {onItemHintClick(index, e)}} type=\"checkbox\"  className=\"filled-in\" />*/}\r\n                    <input checked={isChecked[index]} value={user._id} onChange={(e)=> {onItemHintClick(index, e)}} type=\"checkbox\"  className=\"filled-in\" />\r\n                    <span></span>\r\n                  </label>\r\n              </td>\r\n              <td>{index + 1}</td>\r\n              <td>{user._id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{new Date(user.date).toLocaleDateString('ru')}</td>\r\n              {/*<td>{new Date(user.dateLogin).toLocaleTimeString('ru', 'hour24')}-{new Date(user.dateLogin).toLocaleDateString('ru')} </td>*/}\r\n              <td>{new Date(user.dateLogin).toLocaleDateString('ru', {hour: 'numeric', minute: 'numeric'})} </td>\r\n              <td>{user.status ? 'active' : 'blocked'}</td>\r\n            </tr>\r\n          )\r\n        }) }\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":16,"nodeType":"69","messageId":"70","endLine":1,"endColumn":27},{"ruleId":"67","severity":1,"message":"71","line":35,"column":17,"nodeType":"69","messageId":"70","endLine":35,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":62,"column":15,"nodeType":"69","messageId":"70","endLine":62,"endColumn":19},{"ruleId":"67","severity":1,"message":"71","line":77,"column":17,"nodeType":"69","messageId":"70","endLine":77,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":90,"column":15,"nodeType":"69","messageId":"70","endLine":90,"endColumn":19},{"ruleId":"67","severity":1,"message":"71","line":101,"column":17,"nodeType":"69","messageId":"70","endLine":101,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":118,"column":15,"nodeType":"69","messageId":"70","endLine":118,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":124,"column":3,"nodeType":"69","endLine":124,"endColumn":12,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":165,"column":11,"nodeType":"69","messageId":"70","endLine":165,"endColumn":22},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUserPicked'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [users] as a second argument to the useEffect Hook.",["78"],"'filterUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Add dependencies array: [users]",{"range":"81","text":"82"},[3453,3453],", [users]"]